name: On Merge in Main

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
env:
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
jobs:
  ensure-code-quality:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v4

      - name: Use Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Check linting rules
        run: npm run lint

      - name: Run tests
        run: npm run test-in-pipeline
  
  snyk-security-analysis:
    runs-on: ubuntu-latest
  
    steps:
     
      - name: Checkout the code
        uses: actions/checkout@v2
        
      - name: Install Snyk CLI
        run: npm install -g snyk
          
      - name: Authenticate with Snyk  
        run: snyk config set api=${{secrets.SNYK_TOKEN}}
        
      - name: Test for vulnerabilities with Snyk
        run: snyk code test
        
  sonarcloud-security-analysis:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: SonarCloud scan
        uses: SonarSource/sonarcloud-github-action@master
        with:
          fetch-depth: 0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  docker-configuration:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the code
        uses: actions/checkout@v2

      - name: Login to DockerHub
        run: docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build the Docker image
        run: docker build -t ${{secrets.DOCKERHUB_USERNAME }}/devopsfrontend:latest .
        working-directory: .

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'docker.io/${{secrets.DOCKERHUB_USERNAME }}/devopsfrontend:latest'
          format: 'table'
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
          
      - name: Push Docker image to DockerHub
        run: docker push ${{secrets.DOCKERHUB_USERNAME }}/devopsfrontend:latest
